plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.2'
    id 'io.spring.dependency-management' version '1.1.6'
}

group = 'org.example'
version = '0.0.1-SNAPSHOT'

ext {
//    nexusUrl = 'http://10.74.102.45:8081/repository/techsupport-releases'
    nexusUrl = 'http://10.74.102.45:8081/repository/techsupport-snapshot'
    querydslVersion = '5.1.0'
    nettyVersion = '4.1.110.Final'
    protoBufVersion = '4.27.0'
    hamonicaCommonVersion = '2.0.0-20240627.042822-5:all@jar'
    hamonicaRequiredLibsVersion = '2.0.0-20240620.045803-1:all@jar'
    profile= project.hasProperty("profile") ? project.property("profile").toString() : "local"
}


allprojects {

    repositories {
        mavenCentral()
        maven {
            allowInsecureProtocol true
            credentials {
                username "techsupport2"
                password "pion@1208"
            }
            url  'http://10.74.102.45:8081/repository/techsupport-public'
            artifactUrls  'http://10.74.102.45:8081/repository/techsupport-snapshot'
        }
    }
}


subprojects {

    java {
        toolchain {
            languageVersion = JavaLanguageVersion.of(21)
        }
    }


    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    // Querydsl 설정부
    def generated = 'src/main/generated'
    [compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

    tasks.withType(JavaCompile).configureEach {
        options.getGeneratedSourceOutputDirectory().set(file(generated))
        options.encoding = 'UTF-8'
    }

    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
    }
    sourceSets {
        // java source set 에 querydsl QClass 위치 추가
        main {
            java {
                srcDirs = ["$projectDir/src/main/java", "$projectDir/${generated}"]
            }
            resources {
                // 맨 마지막 "src/main/resources/resources-${profile}" 추가 ⭐️
                srcDirs = ["$projectDir/src/main/resources", "$projectDir/src/main/resources"]
            }
        }
    }


    dependencies {
        implementation ('kr.co.pionnet.butterfly:butterfly2-core:2.0.0-20240711.080509-2'){
            //org.springframework.boot:spring-boot-starter-web:3.2.5 와 jackson-bom 충돌남
            exclude group: 'com.fasterxml.jackson', module: 'jackson-bom'
            exclude group: 'org.apache.poi'					, module: 'poi'
        }
        implementation 'kr.co.pionnet.butterfly:butterfly2-security:2.0.0-20240712.015915-1'

        implementation "kr.co.pionnet.hamonica2:hamonica2-common:$hamonicaCommonVersion"
        implementation 'org.springframework.boot:spring-boot-starter'
        implementation 'org.springframework.boot:spring-boot-starter-data-rest'
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        implementation 'org.springframework.boot:spring-boot-starter-security'
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.boot:spring-boot-starter-validation'
        implementation 'org.springframework.boot:spring-boot-starter-websocket'

        implementation 'jakarta.servlet:jakarta.servlet-api:6.0.0'
        implementation 'org.apache.commons:commons-lang3:3.14.0'
        implementation 'org.apache.httpcomponents:httpasyncclient:4.1.5'
        implementation 'commons-io:commons-io:2.16.1'

        implementation 'io.hypersistence:hypersistence-utils-hibernate-63:3.8.1'

        // Querydsl 추가
        implementation "com.querydsl:querydsl-jpa:${querydslVersion}:jakarta"
        annotationProcessor "com.querydsl:querydsl-apt:${querydslVersion}:jakarta"
        annotationProcessor "jakarta.annotation:jakarta.annotation-api:3.0.0"
        annotationProcessor "jakarta.persistence:jakarta.persistence-api"

        implementation 'org.hibernate:hibernate-core:6.5.2.Final' // Check for latest version
        implementation 'joda-time:joda-time:2.10.13'

        implementation 'org.mapstruct:mapstruct:1.5.5.Final'
        annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'

        implementation 'org.freemarker:freemarker:2.3.32'

        runtimeOnly 'com.h2database:h2'

        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'
        testCompileOnly 'org.projectlombok:lombok'
        testAnnotationProcessor 'org.projectlombok:lombok'

        annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    }

    tasks.named('test') {
        useJUnitPlatform()
    }

}

